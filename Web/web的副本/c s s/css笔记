结构 样式 行为  相分离
cascading style sheet 层叠样式表
引入css

1.行间样式
<div style="
	width:100px;
	height:100px;
	background-color:red;

"></div>
2.页面级别
<head>
	<meta charset="UTF-8">
	<title>document</title>
	<style type='text/css'>
	div{
		width:100px;
		height:100px;
		background-color:red;
	}
	</style>
</head>

3.外部文件引入
 <link rel="stylesheet" type="text/css" href="xl.css">
4.选择器
1）id 选择器  #id值
2）class 选择器 .class值
3）标签选择器
div{
	background-color:red;
}
4)通配符选择器  适用于整片文档
*{
	background-color:red;
}
5)行间样式
<div style=""></div>
6）属性选择器
[id="only"]{

}

5.选择器优先级

！important > 行间样式 > id > class | 属性 > 标签 > 通配符 

在优先级相同时，谁先出现，谁生效


6.css 权重
!important          infinity
行间样式             1000
id                  100
class | 属性值 | 伪类  10
标签  | 伪元素         1
通配符                0


256 进制

7.父子选择器，派生选择器   
可以多层，没有特指一类的选择器，只要父子关系成立即可

子孙也可以
div span{
	background-color:red;
}


div 下所有子span都可作用

.demo div [id="123"]{
	background-color:red;
}


8.直接子元素选择器   div > span 

div > span {
	background-color:red;
}

9.浏览器选择器顺序自右向左选
10.并列选择器

<div>1</div>
<div class='demo'>2</div>
<p class='demo'>3</p>

只想将 <div class='demo'>2</div> 添加样式

适用并列选择器
div.demo{
	background-color:red;
}

在权重相同的情况下，后来的先到，（即后定义的生效）

11.分组选择器
公用一个代码块

div , .demo, #id{
	background-color:red;
}

12.
font-size ：16px	设置字体高

font-weight：bold   字体加粗  <strong></strong>
lighter normal bold bolder 100 - 900

font-style: italic ;  <em></em>  斜体

font-size: arail;     设置字体

color 设置字体颜色

- 字体颜色设置
1） color：red
2）颜色代码
光学三原色
r 		g		b
# 00-ff 
#000000 正黑 #ff0000 正红 #00ff00 正黑 #0000ff 正蓝
如果每俩位都是相同的可以简写
color:#f40; 
3）颜色函数
color:rgb(0-255, 0-255, 0-255)

border 给容器增加一个盒子，添加外边框
- 参数
	border-width 1px 粗细
	border-style soild  实心
	border-color black 颜色   

border: 1px soild black; 

border-width 1px 粗细
border-style soild  实心 dotted 点状虚线 dash 条状虚线
border-color:  颜色

transparent 透明色

div{
	font-style:italic;
	color:#f40;
	border:100px solid;
	width:0px;
	height:0px;
	border-left-color:#f40;
	border-top-color:transparent;
}


/*三角形*/
div{
	border:100px solid #f40;
	width:0px;
	height:0px;
	border-left-color:#f40;
	border-top-color:transparent;
	border-right-color:transparent;
}

6)属性文本
- 对其方式 
text-align
	- 参数 left center right (左 中 右)

- line-height 单行文本所占高度

- 单行文本水平垂直居中
	text-algin :algin 
	然后让单行文本高度等于容器高度

div{
	border: 1px solid black;
	text-align:center;
	height: 200px;
	line-height:200px;
}

(水平垂直居中的实现：1.text-align:center;容器高度=单行文本高度 line-height)

- 首行缩进  text-indent:2em
首行缩进2个字符

- em 相对字体的尺寸
1 em = 1 * front-size

- 文本装饰 
	- 中华线
	text-decoration: line-through

	- 无线
	<del style='text-decoration:none'>原价50</del>

	- 下划线
	text-decoration: underline


总结：
1.行级元素、内联 inLine (display:line)
	- 内容决定元素所占位置
	- feature：内容决定所占位置
			   不可以通过css改变宽高
	span strong em a del 

2.块级元素 (display:block)
	- feature：独占一行
			   可以通过css改变宽高
	div p ul li ol form address 

3.行级块元素 (display:inline-block)
feature：内容决定大小
		 可以改宽高

## 凡是带有inline的元素，都有文字特性

- 先定义功能在选配功能
- 标签选择器一般用来用来初始化元素

- *{}通配符选择器
	- 初始化所有标签
	*{
		padding:0;
		margin:0;
		list-style:noone;
		text-decoration:none;
	}

- 盒子模型
	- 盒子壁 border 
	- 盒子内边距 padding
	- 盒子内容 width + height;

盒子模型：margin + border + padding + (content = width + height)
		  外边距

 	- padding(上 右 下 左) 
 		- 三个值的时候() 左右相等
 		- 俩个值的时候() 上下相等，左右相等

- /*透明度设置*/
	opacity:0.5;

- 定位
	-position:absolute;  
		- 1. 脱离原来位置进行定位
		相对与最近的有定位的父级进行定位，如果没有相对与文档进行定位
	- position:relative;       
		- 2.保留原来位置进行定位
		相对于原来位置的位置进行定位

    - position:fixed 
    	广告定位

   	- z-index:0 默认值为0，级别越高优先显示，只在有position的情况下生效


	-left:100px  左边线距离左边框的距离  / right 右边线距离右边框的距离
	-top:100px   距离上边距的距离  / bottom 下边线距离下边框的距离

	- 一般使用relative当做参照物，absolute进行定位

	- 屏幕固定居中
	.juzhong{
		position:fixed;
		height:200px;
		width:200px;
		left:50%;
		top:50%;
		/*盒子一半的值*/
		margin-left:-100px;
		margin-top:-100px;
		background-color:red;
	}

	- 圆
	.circular{
	width:200px;
	height:200px;
	border:10px solid black;
	border-radius:50%;
	}

- 垂直方向的margin-top父级和子集是连在一起的,取最大的值
	- margin顶部塌陷
	- 解决方法 bfc 
	block format content  块级格式化上下文
	特定的盒子会遵循另一套语法规则
	- 如何触发一个盒子的bfc
	1)positon:absolute;
	2)display:inline-block;
	3)float:left/right;  浮动
	4)overflow:hidden; 溢出部分隐藏

- 兄弟节点垂直方向的margin合并
	- 将兄弟节点放到bfc环境中
	- 忽略，默认其存在

- 浮动模型
	float:left/right;
	1.浮动元素产生了浮动流
	所有产生了浮动流的元素，块级元素看不到
	他们，产生bfc的元素和文本类属性的元素以
	及文本都能看到的浮动元素
	能看到(inline, bfc)       (块级元素看不到)

	2.清楚浮动流
	父级包住浮动元素
	clear：both

	在浮动元素下添加：
	p{
	clear:both;
    }

- 伪元素：伪元素存在于任意一个元素里，俩个特殊 伪元素 before after 
	在一个标签生成时：在标签内容前后就存在，俩个伪元素

	1.可以当元素操作，但是没有元素结构
	2.天生是行级元素，若想改成块级元素 display:inline-block;
	3

	<span>小林</span>

	通过css选择器选中伪元素

	span::before{
	content:"成哥";
    }

	span::after{
	content:"结尾";
    }


- 溢出容器，要打点展示
	1.单行文本
		/*文字溢出不换行*/
		white-space: nowrap;

		/*溢出部分隐藏*/
		overflow:hidden;

		/*ellipsis: 省略号*/
		text-overflow:ellipsis;

	2.多行文本
		- 多行只做截断
		overflow:hidden;

- 背景图片
	- 设置背景图片的地址
	 	background-image:url(dog.jpg)
		background-image:url(../resoure/dog.jpg)

	- 设置背景图片大小
		background-size:100px 100px;(宽 高)

	- 设置背景图片是否重复
		background-repeat:repeat;
		默认值：repeat (重复)
		no-repeat(不重复)
		repeat-x (x轴平铺)
		repeat-y (y轴平铺) 
	- 设置背景图片位置
    	background-position:x,y
    	- left top / left bottom (left right top bottom center) 随机组合
    	左上  左下


- 当css和js被屏蔽时依然要展示页面
	
	方案1：
	/*首行缩进190px 使文字溢出边框*/
	text-indent:190px;

	/*文字溢出：不换行*/
	white-space: nowrap;

	/*文字溢出隐藏*/
	overflow:hidden;

	方案2：
	.a1 a{
	height:0px;
	width:190px;

	background-repeat:no-repeat;
	background-image:url(../resoure/TMALL.png);
	display:inline-block;
	border:1px solid black;
	background-size: 190px 90px;

	overflow:hidden;
	padding-top:90px;
	}


- 特殊知识点：
	- 行级（span strong em ）元素只能嵌套行级元素
	- 块级元素只能嵌套块级元素 （div p ul li ol form address ）
	- p 标签内不能嵌套块级元素
	- a 标签不能嵌套a标签
	












