- sublime
    - package control
    - install package
    - emmet
    - Jsprettify

 XML XHTML  html4.0
- setInterval(function(){},time)
    - 每间隔多少秒执行一次function中的代码


- DOM - > Document Object Model
    - Dom 定义了表示和修改文档所需的方法dom对象即为宿主对象，有浏览器厂商定义，用来操作html和xml功能的一类对象集合
      Dom 是对HTML以及XML的编程接口
    - 操作不了css样式表，但可以通过改变html行间样式间接改变

    1.对节点增删改查
        - 查 （查看元素节点）
            - document 代表整个文档
            - document.getElementById('')  //元素在Ie8以下的浏览器，不区分大小写，而且返回的内容也会和name名相匹配(如果这个元素没有id，name值等于id也会被选出)
            - document.getElementsByTagName('')  // 标签名 返回的是一个类数组
            - document.getElementsClassName('')  // 类名 i9以下的浏览器没有
            - document.getElementsByName('')  // 只有部分标签可生效（表单，表单元素（input），img，iframe）

            querySelector() 得到的是实时的
            - querySelector() // css选择器 在ie7和ie7以下的版本中没有
                - var div = document.querySelector('div > span > strong.demo1');
            - querySelectorAll() // css选择器在ie7 和ie7以下的版本没有 (选一组)

        - 遍历节点树:（所有浏览器都兼容）
            - parentNode -> 父节点（最顶端的parentNode 为document）;
            - childNodes ->子节点们
            - firstChild - >第一个子节点
            - lastChild - > 最后一个子节点
            - nextSibling - > 后一个兄弟节点
            - previousSibling -> 前一个兄弟节点

        - 遍历元素节点树（除了chidren ，ie9一下都不兼容）
            - parentElement -> 返回当前元素的父元素节点（IE不兼容）
            - children - >  只返回当前元素的元素子节点
            - node.childElementCount == node.children.length 当前子元素节点的个数
            - firstElementChild  -> 返回第一个元素节点（IE不兼容）
            - lastElementChild - > 返回最后一个元素节点
            - nextElementSibling - > 返回下一个兄弟元素节点
            - previousElementSibling -> 返回前一个兄弟元素节点

        - 节点的四个属性
            - nodeName
                - 元素的标签名，以大写形式标识，只读

            - nodeValue
                - Text节点或Comment(注释)节点的文本内容，可读写

            - nodeType
                - 该节点的类型，只读

            - attributes
                - Element 节点的属性集合
                    <div id="only" class="demo"></div>

                    var div = document.getElementsByNameTagName('div')[0];

                    console.log(div.attributes)
                    {0: id, 1: class, id: id, class: class, length: 2}


        - 节点的一个方法 Node.hasChildNodes(); 判断该节点是否有子节点

        - 节点的类型
            - 元素节点 -1
            - 属性节点 -2
            - 文本节点 -3
            - 注释节点 -8
            - document -9
            - DocumentFragment - 11

        - 节点的四个属性
            - nodeName
                - 元素的标签名，以大写形式表示，只读
            - nodeValue
                - Text节点或comment节点的文本内容，可读写
            - nodeType（常用）
                - 该节点的类型，只读
            - attributes
                - Element节点的属性集合

            - 节点的一个方法Node.hasChildNodes();

- Dom结构树
Node: Document - HTMLDocument
               - XMLDocument
      CharacterData - Text
                    - Comment - HTMLHeadElement
                              - HTMLBodyElement
                              - HTMLTitleElement
                              - HTMLParagraphElement
                              - HTMLInputElement
                              - HTMLTableElement

      Element - HTMLElement
      Attr

-
document --> HTMLDocument.prototype --> Document.prototype

    -1.getElementById方法定义在Document.prototype上
    -2.getElementsByName方法定义在HTMLDocument.prototype上，即非html中document不能使用
    -3.getElementsByTagName方法定义在Document.prototype和Element.prototype上
    -4.HTMLDocument.prototype定义了一些常用的属性，body，head分别指代html中的<body><head>标签
         - document.body  --> <body>
         - document.head --> <head>
    -5.Document.prototype上定义了documentElement属性，指代文档的根元素，在Html文
    档中，他总是指代<html>元素
        - document.documentElement --> <html></html>

    -6.getElementsByClassName, querySelectorAll,querySelector 在Document.prototype,
    Element.prototype



- 如果想取div下的span
    <div>
        <span></span>
    </div>
    <span></span>


    <script>
        div = document.getElementsByTagName('div')[0];
        span = div.getElementsByTagName('span')[0];
    </script>

- 选择所有标签
var div = document.getElementsByTagName('*');


    - 2.创建dom节点
        - var div = document.createElement('div'); 创建元素节点
        - var text = document.createTextNode('邓哥'); 创建文本节点
        - var comment.createComment('');  创建注释节点
        - document.createDocumentFragment(); 创建碎片节点
    -3.插入节点
        - PARENTNODE.appendChild  插入元素节点(push) 剪切操作
        - PARENTNODE.insertBefore(a, b);
            在b的上方插入a insert a before b

    - 删除节点：
        - parent.removeChild();通过父节点
        - child.remove();   节点自身删除
    - 替换
        - parent.replaceChild(new, origin)


    - 3.div.innerHTML 改变/获取标签的HTML内容
            <div>
                <span>123</span>
                <strong>234</strong>
            </div>
        div.innerHTML  ->
        "
        <span>123</span>
        <strong>234</strong>
        "

        div.innerHTML = '123' 赋值 的话是覆盖

    - 4.div.innerText 直接取文本
        div.innerText  -> 123 234
        innerText 里有其他层级结构，小心，会覆盖
        不兼容fireFox / textContent(老版本ie不兼容)


    - Element 节点的一些方法
        - ele.setAttribute('class', 'demo')
                            属性名， 属性值
            - 给标签设置行间属性

        - ele.getAttribute('class')
            - 获取标签属性值



