- 日期对象，是系统提供好的
    - 获取时间
        - 使用内置构造函数Date()构造日期对象
        var date = new Date();
        - getDate
            date.getDate()
            24 返回一个月的某一天（1-31）
        - getDay()
            - 返回星期几（零的时候是星期天）（0-6）
        - getFullYear()
            以四位数字返回年份
        - getHours()
            - 返回（0-23）
        - getMinutes()
            - 返回（0-59）
        - getSeconds()
            - 返回秒数

        - date()
            - 实例记录的是其从var 那一个刻的时间信息截取，不是实时的
        - getMilliseconds()
            - 返回对象的毫秒（0-9999）

        - getTime()
            - 返回1970年1月1日至今的毫秒数 纪元时间

    - set
        - setFullYear()
            - 设置年
        - setMonth
            - 设置月（0-11）
        - setDate()
            - 设置月中某一天（1-31）
        - setHours（）
            - 设置小时 （0-23）
        - setMinutes
            - 设置分钟 （0-59）

        - setSeconds()
            - 设置秒（0-59）

        - setTime()
            - 以毫秒设置时间

    - 时间对象.toString

    - 练习：
        - 定时器
        var date = new Date();
        date.setMinutes(36);
        date.setSeconds(10);
        setInterval(function(){
            console.log(new Date().getTime());
            console.log(date.getTime());
            var newDate = new Date();
            if(newDate.getTime() - date.getTime() > 1000 && newDate.getTime() - date.getTime()< 10000){

                console.log('到时间了')
            }
        },1000);

        - 封装函数，打印当前年月日时分秒

    - setInterval 定时器 (window上的方法)        定时循环器
        - 每个setInterval 都会返回一个他的唯一标识（数字）
        - 每隔time时间执行一次setInterval内的函数（不可以通过给变time来控制function的执行快慢）
        var time = 1000;
        setInterval(function(){
            console.log('a');
        }, time);

    - clearInterval(setInterval的返回的唯一标识)
        -  清楚定时器的方法
                var i = 0;
                var timer = setInterval(function(){

                    console.log(i ++);
                    if(i>10){
                        clearInterval(timer);
                    }
                }, 10);

    - setTimeout 隔了多timer执行
        - setTimer(function(){}, timer)
