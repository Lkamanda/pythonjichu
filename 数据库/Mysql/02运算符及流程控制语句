# 运算符 
## 算数运算符
- "+" - * / %  DIV 除法运算  MOD 乘法运算
## 比较运算符
- ！= 不等于 ， IS NULL , IS NOT NULL , BETWEEN AND , IN , NOT IN , LIKE  , NOT LIKE , REGEXP 常规表达式 name 正则表达式
## 逻辑运算符
- && / and  与
- || / or   或 ： 所有数据有一个非0数据返回1， 数据中不包含非0数据，但包含null时返回null
- ！ / NOT 非  : 将返回和操作数据取反
- XOR  异或 ：
    - 1 1 0 
    - 1 0 1 
    - 0 0 0
    - null null null
## 位运算符
- 数据库系统会将十进制转换成二进制，然后对应操作数的每个二进制位上进行运算，运算完成后将二进制在转换成十进制。
- & 按位与计算，进行该运算时，
    - 1&1 得 1 
    - 0&0 得 0 
- | 按位或，
    - 1和任何数运算的结果都是1，0与0 的运算结果为0
- ~ 按位取反 
    - 1取反后为0,0取反后为1 
- ^ 异或 相同的数异或的结果为0，不同数异或为1
-  <<  m <<n m表示二进制数 ，n表示移动位数
    - 011<< 1 0110
- >> m >> n   
    - 011 >> 1  001

## 运算符优先级
- 从高到低，从左至右

# 流程控制语句
## IF 语句：用来进行条件判断，根据不同的条件执行不同的语句
- IF condition THEN ; [ELSE condition THEN] ; [ELSE] ... END IF 

## case 语句为多分支结构
- CASE value 
    - WHEN value THEN 
    - [WHEN value THEN]
    - [ELSE]
- END CASE 

- CASE 
    - WHEN value THEN 
    - [WHEN value THEN]
    - [ELSE]
- END CASE
- 列子:
    - delimiter //                    - 定界符
    - create procedure example_case(in x int)
    - begin 
    - case x
    - when 1 then select 1;
    - when 2 then select 2;
    - else select 3;
    - end case:
    - end 
    - //                        - 将delimiter // 释放
    
## WHILE 循环语句
- WHILE循环语句首先判断condition条件是否为真，如果是则执行循环体，否则退出循环
- WHILE condition DO
- ...
- END WHILE;

## LOOP 循环语句
- 允许特定语句或语句群的重复执行，退出循环换使用LEAVE
- LEAVE lable :退出被标注的循环语句        // lable 标签
- 例子：
    - delimiter // 
    - create procedure example_loop(out sum int)         // 创建一个名为 example_loop 的存储过程
    - declare i int default 1;   // declare定义形参        定义形参 i 为整数 默认值为1 ；
    - declare s int default 0:
    - loop_label:loop 
    - set s=s+i
    - set i=i+1 
    - if i>100 then 
    - leave loop_lable;
    - end if;
    - end loop :
    - set sum= s;
    - end
    //
- 掉用example_loop 存储过程的方法：
    - call example_loop(@s) 
    - select @s
## REPEAT 循环语句
- 该语句先执行一次循环体，之后判断condition是否为真，为真退出循环，否则继续执行循环。
- REPEAT 
- ....
- UNTIL condition 
- END REPEAT 
- 例子
    - delimiter  //
    - CREATE PROCEDURE example_repeat(out sum int)
    - begin
    - declare i int default 1:
    - declare s int default 0;
    - REPEAT
    - s=s+i 
    - i=i+1 
    - UNTIL i>10
    - END REPEAT;
    - SET sum=s;
    - END
    - //
    
    - CALL example_repeat(@s)
    - select @s
 
 - ITERATE lable 重新开始一个循环
 - 储存过程不存在FOR循环