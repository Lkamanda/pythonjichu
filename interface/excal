# 环境
- 详情
- python 3.6
- requests:请求方法
- xlrd
- openpyxl
- HTMLTestRunner_api
- https://www.cnblogs.com/insane-Mr-Li/p/9092619.html
## xlwt 模块： 对excal 进行写入
## xlrd 模块 ： 对excal 进行读取
- 常用的单元格属性
    - 0.empty 为空
    - 1.string(text)
    - 2.number
    - 3.date 
    - 4.boolean
    - 5.error
    - 6.blank(空白表格)
- excal 中重要的方法就是book 和sheet 的操作
- 打开excal 读取数据
data = xlrd.open_workbook(filename)
### 通过索引顺序获取
table = data.sheets ()[0]
### 通过索引顺序获取
table = data.sheet_by_index(sheet_index)
### 通过名称获取
table = data.sheet_by_name(sheet_name)

### 以上三个函数都会返回一个xlrd.sheet.Sheet()对象

names = data.sheet_names() # 返回所有表的名字

data.sheet_loaded(sheet_name or index) # 检查摸个sheet 是否导入完毕

- 对行的操作
    - 
    
## 数据分离
### 动态参数的处理
- cookie session token
# 版本间切换
- 维护成本. 效率, 版本切换
- 如何获取请求数据
    - dump 将内置类型装换成json dict转str
    - load 读取json中数据(把json变为python) str转dict
    - loads 和 load 的区别 loads针对是对象,load针对的是文件. dump同理
- 通过load读取json文件,返回字典. 通过excal中获取去对应位置的k,在从返回字典中拿到对应请求参数v
- 对post请求进行2次封装
- 编写测试用例
- 断言
    - 1.协议状态码
        - 1xx 临时响应
        - 2xx 表示服务器处理乘成功
        - 3xx 已重定向
        - 4xx 请求错误
        - 5xx 服务器遇到错误
            - 500服务器内部
            - 505服务器http版本不支持
    - 2.业务状态码
    - 3.针对具体业务来进行断言
    - 4.有针对性的进行断言
# 常见的问题
- 如何测试用例fiail其他测试用例继续执行在unittest中
- 如遇到第n页的这样测试例中重复步骤进行抽离进行二次重构.
- 需要考虑的问题动态数据,上下关联
    - 不要使用类属性这样的解决方案, 维护成本太高
- 1.请求参数为动态参数
    - 场景1:支付
    - 有n总支付方式
    - payType: wx, zfb, ylian and so on
    - 解决方法:通过对象层
        - 1.获取到数据,对其进行赋值
        - 2.将该变的参数参数化,设置个变量

-2,跟业务关联起来

-3.当对post请求,进行二次封装时遇到,不同的接口需要用的headers或其他被封装在post请求中参数细微不同时如何解决
    - 重新写一个post请求这种方法2是不科学的
    - 例如:添加一个函数进行判断

   - 类似于不同版本之间差异问题,页可以用此方法解决,将判断做成装饰器也ok









