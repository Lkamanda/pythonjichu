# 页面解析和数据提取
- 结构数据: 先有结构再由数据
    - Json文件
        - JSON Path
        - 转换成 Python类型进行操作(json类)
    - XML文件
        - 任何一个内容用标签表现出来
        - 转换成python类型,(xmltodict)
        - Xpath
        - CSS选择器
        - 正则
- 非结构化数据 : 现有数据再谈结构
    - 文本
    - 电话号码
    - 邮箱地址
        - 通常处理此类数据,使用正则表达式
    - Html文件
        - 正则
        - Xpath
        - CSS选择器
# 正则表达式
- re 案例:v01正则流程
- v02: match基本使用
- 正则常用方法:
    - match:从开始位置开始查找,一次匹配
    - search :从任何位置查找,一次匹配  案例:V03
    - findall: 全部匹配 ,返回列表 V04
    - finditer: 全部匹配,返回迭代器   v05
    - split:分割字符串,返回李彪
    - sub替换

- 匹配中文
    - 中文unicode范围主要在[u4e00-u9fa5]
    - 案例v06
- 贪婪和非贪婪
    - 安全模式:在整个表达式匹配成功前提下,尽可能多的匹配
    - 非贪婪模式:xxxx,尽可能少的匹配
    - python里面数量词默认是贪婪模式
    - 例如:
        - 查找问吧abbbbbbccc
        - re 是ab*
            - 贪婪模式:结果是abbbbbb
            - 非贪婪:结果是a
                - ?实现

# XML
- XML(ExtensibleMarkuoLanguage)
    - 侧重传输数据
    - 只有一个跟标签,数据放在标签中
    - V06
# XPath
- Xpath(XML Path language) 是一门在xnl 文当中查找信息的语言
- Xpath 工具:
    - xpath XMLQuire
    - chrom插件: xpath helper
    - Firefox: Xpath Checke
- 需要路径表达式:
    - nodename: 选取此节点的所有子节点
    - /:从根节点开始 (绝对路径)
    - // : 读取元素,不考虑位置
    - .: 当前节点
    - ..: 父亲节点
    - @ :选取属性

